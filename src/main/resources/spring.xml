<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:task="http://www.springframework.org/schema/task"  
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"
	    >
	
	<context:component-scan  base-package="com.*" />
	<context:component-scan  base-package="com.jlc.api.cache.redis" />
	<context:annotation-config />
	<tx:annotation-driven />

	<!-- 引入配置文件 -->
    <context:property-placeholder location="classpath:jdbc.properties"/>
	
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close"> 
		<property name="driverClass" value="${ds.driverClass}"/>
		<property name="jdbcUrl" value="${ds.jdbcUrl}" />
		<property name="user" value="${ds.user}"/>
		<property name="password" value="${ds.password}"/> 
		<!--初始化是获取的连接数，取值应在minPoolSize与maxPoolSize之间 Default：3-->
		<property name="initialPoolSize" value="${ds.initialPoolSize}"/>
		<!--连接池中保留的最小连接数。Default：15-->
		<property name="minPoolSize" value="${ds.minPoolSize}"/>
		<!--连接池中保留的最大连接数。Default：15-->
		<property name="maxPoolSize" value="${ds.maxPoolSize}"/>
		<!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则不丢弃。Default：0-->
		<property name="maxIdleTime" value="${ds.maxIdleTime}"/>
		<!--当连接池中的连接耗尽的时候c3po一次同时获取的连接-->
		<property name="acquireIncrement" value="${ds.acquireIncrement}"/>
	</bean>
	
    <!-- 
    <bean id="dataSourceProperties" class="com.mystore.business.util.PropertiesEncryptFactoryBean">  
        <property name="properties">  
            <props>  
                <prop key="user">zwh</prop>                            
                <prop key="password">PnB6tnzO/iA=</prop>  
            </props>  
        </property>  
    </bean>
     -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager" >
        <property name="dataSource" ref="dataSource" />
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!-- 自动扫描mapping.xml文件 -->  
        <property name="mapperLocations" value="classpath:com/jlc/api/mapping/*.xml"></property>  
    </bean> 
	
 	<tx:advice id="txAdvice" transaction-manager="transactionManager">     
		<tx:attributes>   
			<tx:method name="save*" propagation="REQUIRED" rollback-for="Exception,RuntimeException" />
			<tx:method name="add*" propagation="REQUIRED" rollback-for="Exception,RuntimeException" />
		    <tx:method name="update*" propagation="REQUIRED" rollback-for="Exception,RuntimeException" />
		    <tx:method name="delete*" propagation="REQUIRED" rollback-for="Exception,RuntimeException" />
		    <tx:method name="*" propagation="SUPPORTS" read-only="true" /> 
		</tx:attributes>  
	</tx:advice>  
	
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<aop:config proxy-target-class="true">  
		<aop:advisor  pointcut="execution(* com.jlc.api.service..*ServiceImpl.*(..))"  advice-ref="txAdvice" />  
	</aop:config>  
	
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
       	<property name="basePackage" value="com.jlc.api.dao" />  
   </bean>  
   
    <bean id="userAction" class="com.jlc.api.action.UserAction" scope="prototype" />
    <bean id="userService" class="com.jlc.api.service.impl.UserServiceImpl"/>

    <!-- token -->
    <bean id="appTokenService" class="com.jlc.api.service.impl.AppTokenServiceImpl"/>
  
</beans>

